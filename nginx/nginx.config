# Bloco 1: Redirecionar HTTP para HTTPS e servir desafio do Certbot
server {
    listen 80;
    server_name ian-honorato.com.br www.ian-honorato.com.br; # Domínio atualizado

    # Rota para a validação do Let's Encrypt (Certbot)
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redireciona todo o restante do tráfego HTTP para HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# Bloco 2: Servir a aplicação via HTTPS com proxy reverso para Frontend e Backend
server {
    listen 443 ssl http2;
    server_name ian-honorato.com.br www.ian-honorato.com.br; # Domínio atualizado

    # Caminho para os certificados SSL gerados pelo Certbot
    ssl_certificate /etc/letsencrypt/live/ian-honorato.com.br/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/ian-honorato.com.br/privkey.pem;

    # --- Configurações de segurança SSL recomendadas ---
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;
    # --- Fim das configurações de segurança ---

    # Aumenta o limite de tamanho para uploads de arquivos, se necessário
    client_max_body_size 50M;

    # --- Proxy para a API (Backend) ---
    # Todas as requisições que começam com /api/ serão enviadas para o backend
    location /api/ {
        # Remove o /api/ do início da URL antes de passar para o backend
        rewrite ^/api/(.*)$ /$1 break;

        proxy_pass http://backend:3000;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # --- Proxy para o Frontend ---
    # Todas as outras requisições irão para o frontend
    location / {
        proxy_pass http://frontend:80;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade'; # Necessário para WebSockets
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}

