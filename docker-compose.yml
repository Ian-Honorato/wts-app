version: "3.9"

services:
  db:
    image: mariadb:10.11
    container_name: minha-api-db-mariadb
    restart: unless-stopped
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    env_file: .env
    environment:
      MARIADB_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MARIADB_DATABASE: ${DB_NAME}
      MARIADB_USER: ${DB_USER}
      MARIADB_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db-data-mariadb:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u${DB_USER}",
          "-p${DB_PASSWORD}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: minha-api-backend
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    env_file: ./backend/.env # Mantém o .env específico do backend
    environment:
      DATABASE_HOST: db # Garante que o backend se conecte ao serviço 'db'
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend/wtsapp
      dockerfile: Dockerfile
    container_name: minha-api-frontend
    restart: unless-stopped
    networks:
      - app-network

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: minha-api-nginx
    restart: unless-stopped
    ports:
      - "80:80" # Expõe somente a porta 80 (HTTP)
    depends_on:
      - frontend
      - backend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - app-network

volumes:
  db-data-mariadb:

networks:
  app-network:
    driver: bridge
