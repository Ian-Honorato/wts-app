version: "3.9"

# Define uma rede customizada para a aplicação, para melhor isolamento e comunicação.
networks:
  app-network:
    driver: bridge

# Define o volume nomeado para persistir os dados do banco de forma segura.
volumes:
  db-data:

services:
  # Serviço do Banco de Dados (MariaDB)
  db:
  image: mariadb:10.11
  container_name: minha-api-db
  restart: unless-stopped
  command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
  env_file: .env
  environment:
    MARIADB_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-root} # define root caso não esteja no .env
    MARIADB_DATABASE: ${DB_DATABASE}
    MARIADB_USER: ${DB_USER}
    MARIADB_PASSWORD: ${DB_PASSWORD}
  volumes:
    - db-data:/var/lib/mysql
  networks:
    - app-network
  healthcheck:
    test:
      [
        "CMD",
        "mysqladmin",
        "ping",
        "-h",
        "localhost",
        "-u${DB_USER}",
        "-p${DB_PASSWORD}",
      ]
    interval: 10s
    timeout: 5s
    retries: 5

  # Serviço do Backend (API Node.js)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: minha-api-backend
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy # <<<--- ESTA É A CHAVE DA VITÓRIA
    env_file: ./backend/.env
    environment:
      DATABASE_HOST: db
    networks:
      - app-network

  # Serviço do Frontend (Aplicação Vite/React)
  frontend:
    build:
      context: ./frontend/wtsapp
      dockerfile: Dockerfile
    container_name: minha-api-frontend
    restart: unless-stopped
    networks:
      - app-network

  # Serviço do Nginx (Proxy Reverso)
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: minha-api-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - app-network
